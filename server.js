// Generated by CoffeeScript 1.6.3
(function() {
  var PORT, fs, http, mime, path, server, setting, zlib;

  http = require('http');

  path = require('path');

  fs = require('fs');

  PORT = 3000;

  zlib = require("zlib");

  mime = require('./config/mime');

  setting = require('./config/setting');

  server = http.createServer(function(req, res) {
    var contentType, ext, fileId, realPath;
    fileId = '12.png';
    realPath = path.resolve(setting.rootPath() + 'assets/files/' + fileId);
    ext = path.extname(realPath);
    ext = ext != null ? ext : ext.slice(1);
    contentType = mime[ext] || "text/plain";
    res.writeHead(200, {
      'Content-Type': contentType
    });
    console.log('realPaht: ' + realPath);
    return fs.exists(realPath, function(exists) {
      var acceptEncoding, raw;
      if (!exists) {
        return res.send('No exist!');
      } else {
        raw = fs.createReadStream(realPath);
        acceptEncoding = req.headers['accept-encoding'] || "";
        if (acceptEncoding.match(/\bgzip\b/)) {
          res.writeHead(200, "Ok", {
            'Content-Encoding': 'gzip'
          });
          return raw.pipe(zlib.createGzip()).pipe(res);
        } else if (acceptEncoding.match(/\bdeflate\b/)) {
          res.writeHead(200, "Ok", {
            'Content-Encoding': 'gzip'
          });
          return raw.pipe(zlib.createDeflate()).pipe(res);
        } else {
          res.writeHead(200, "Ok");
          return raw.pipe(res);
        }
      }
    });
  });

  /*
    raw = fs.createReadStream realPath, 'binary', (err,file)->
      if err
        res.writeHead 500, {'Content-Type': 'text/html'}
        res.end err
      else
        res.writeHead 200,
                      'Content-Type': 'text/html'
        res.write(file,'binary')
        res.end()
  */


  server.listen(PORT);

  console.log("Server runing at port: " + PORT + ".");

}).call(this);
